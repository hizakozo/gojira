/*
 * This file is generated by jOOQ.
 */
package com.example.gojira_api.driver.gen.tables.records


import com.example.gojira_api.driver.gen.tables.Users

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var userId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var externalUserId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var email: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var name: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(userId: UUID? = null, externalUserId: String? = null, email: String? = null, name: String? = null, createdAt: Long? = null): this() {
        this.userId = userId
        this.externalUserId = externalUserId
        this.email = email
        this.name = name
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}
