/*
 * This file is generated by jOOQ.
 */
package com.example.gojira_api.driver.gen.keys


import com.example.gojira_api.driver.gen.tables.Databasechangeloglock
import com.example.gojira_api.driver.gen.tables.Projects
import com.example.gojira_api.driver.gen.tables.Tickets
import com.example.gojira_api.driver.gen.tables.Users
import com.example.gojira_api.driver.gen.tables.records.DatabasechangeloglockRecord
import com.example.gojira_api.driver.gen.tables.records.ProjectsRecord
import com.example.gojira_api.driver.gen.tables.records.TicketsRecord
import com.example.gojira_api.driver.gen.tables.records.UsersRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val DATABASECHANGELOGLOCK_PKEY: UniqueKey<DatabasechangeloglockRecord> = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), arrayOf(Databasechangeloglock.DATABASECHANGELOGLOCK.ID), true)
val PROJECTS_PKEY: UniqueKey<ProjectsRecord> = Internal.createUniqueKey(Projects.PROJECTS, DSL.name("projects_pkey"), arrayOf(Projects.PROJECTS.PROJECT_ID), true)
val TICKETS_PKEY: UniqueKey<TicketsRecord> = Internal.createUniqueKey(Tickets.TICKETS, DSL.name("tickets_pkey"), arrayOf(Tickets.TICKETS.TICKET_ID), true)
val UNIQUE_EXTERNAL_USER_ID: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("unique_external_user_id"), arrayOf(Users.USERS.EXTERNAL_USER_ID), true)
val USERS_PKEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), arrayOf(Users.USERS.USER_ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val TICKETS__TICKETS_PROJECT_ID_FKEY: ForeignKey<TicketsRecord, ProjectsRecord> = Internal.createForeignKey(Tickets.TICKETS, DSL.name("tickets_project_id_fkey"), arrayOf(Tickets.TICKETS.PROJECT_ID), com.example.gojira_api.driver.gen.keys.PROJECTS_PKEY, arrayOf(Projects.PROJECTS.PROJECT_ID), true)
